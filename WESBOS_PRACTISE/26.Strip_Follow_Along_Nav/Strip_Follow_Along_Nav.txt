   < BUTTON >
--- See how we made button(kinda jumbotron) on an <a> element.
    > used padding to increase it's background "space".
    > used color picker to make the background greyish/jumbotronish.
    > border-radius of less amount i.e 5px to make it curved like a button.

   < HOW TO TAKE EXACT SPACE AS THE CONTENT >
--- > just put {display: inline-block;}, because by default most elements are 'block'
      element which takes up 100% of the parent width.
    > And then use <br> if you want the element in next line, or else by default the next
      element will be at the same line/row.
   
   < INCEPTION SELECTION >
--- > e.g '.list > li > a', this selects/targets <a> which are direct child of <li> which,
     in turn, are direct child of ".list" class. 
    > space is not mandatory.
      e.g '.linksList>li>a'.

    < EMPTY DIV IN A FLEX CONTAINER WITH FLEX:1 >
--- > Unlike <li> element, as we have seen on project #25 titled "sticky_nav", <div> does
      not take extra space when the elements are spread(i.e {Flex: 1}) under a "FLEXED"
      container.

    < COOL WAY TO PUT ANIMATION IN HIDE/SHOW CLASS > 
--- > use of two properties: 1> display: none;
                             2> opacity: 0;
      Then while adding, first display: block will come into effect, then opacity:1. 
      Put transition on opacity property to have an animation effect.

    < A S O L U T E    P O S I T I O N I N G>
--- > when we put { position: absolute } to an/a child element, then it is not "included"
      within its parent container.
      e.g .dropDown{ },
           Case 1: if we put { position: relative }, the said class element takes up 
                   space and is "included" in the <li>.
           Case 2: if we put { position: absolute }, the said class element does not
                   takes up space and is not "included" in the <li>.
           Note: Watch the difference through the chrome developer tool.
                 Also mute padding and top property of .dropDown

    < IF CONDITION WITHIN THE "setTimeout" FUNCTION >
--- > know this.

    < HIDING THE ARROW's BOX WHILE TRANSITIONING >
--- > top and left property was set to the outside div i.e .dropdownBackground.
    > the .dropDown height and width property was set quicker i.e 0.1s;
    > if condition in setTimeout function.
    > mainly play with the time, so it tricks the human eye.

****** < REMEMBER TO SET THE PROPERTIES BACK TO INITIAL VALUE AFTER THE END OF AN EVENT 
     FOR e.g HERE WE CHANGED BACK THE VALUE OF WIDTH, HEIGHT, LEFT etc PROPERTIES TO 0PX
     IN THE "mouseLeave" EVENT METHOD; >
